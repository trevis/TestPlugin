name: 'Build'
on:
  push:
    branches:
    - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build
        run: |
          dotnet restore                        # install packages
          dotnet build -c Release --no-restore  # build
          
          export CZ_PLUGIN_MANIFEST="${{ github.workspace }}/manifest.json"
          export CZ_PLUGIN_VERSION="$(cat $CZ_PLUGIN_MANIFEST | jq -r '.version')-${{ env.GITHUB_SHA }}"
          export CZ_PLUGIN_NAME="$(cat $CZ_PLUGIN_MANIFEST | jq -r '.name')"
          export CZ_PLUGIN_PACKAGE_NAME="${CZ_PLUGIN_NAME}.${CZ_PLUGIN_VERSION}"
          export CZ_NUGET_PATH="${{ github.workspace }}/bin/${CZ_PLUGIN_PACKAGE_NAME}.nupkg"

          echo "CZ_PLUGIN_PACKAGE_NAME=$CZ_PLUGIN_PACKAGE_NAME" >> $GITHUB_ENV
          echo "CZ_NUGET_PATH=$CZ_NUGET_PATH" >> $GITHUB_ENV
        
      - uses: actions/upload-artifact@v4
        with: 
          name: "${{ env.CZ_PLUGIN_PACKAGE_NAME }}.nupkg"
          path: "${{ env.CZ_NUGET_PATH }}"

      - uses: actions/upload-artifact@v4
        with: 
          name: "${{ env.CZ_PLUGIN_PACKAGE_NAME }}"
          path: "${{ github.workspace }}/bin/net8.0/"

      - name: Push GitHub NuGet Package
        run: |
          dotnet nuget add source --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
          dotnet nuget push "${{ env.CZ_NUGET_PATH }}" --api-key ${{ secrets.GITHUB_TOKEN }} --source "github"
      